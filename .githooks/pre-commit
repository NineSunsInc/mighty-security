#!/bin/bash

# Pre-commit hook - Run critical security tests before allowing commit
# This ensures we never commit code that breaks security

echo "🔍 Running pre-commit security validation..."
echo ""

# Get to repo root
cd "$(git rev-parse --show-toplevel)"

# Activate virtual environment if not already active
if [ -z "$VIRTUAL_ENV" ]; then
    echo "⚡ Activating virtual environment..."
    if [ -f ".venv/bin/activate" ]; then
        source .venv/bin/activate
    else
        echo "❌ ERROR: Virtual environment not found!"
        echo "Please run 'uv sync' first"
        exit 1
    fi
fi

echo "🚀 Running core security tests (fast mode)..."
echo ""

# Run development tests (core security only, fast)
if ! bash tests/run_dev_tests.sh; then
    echo ""
    echo "❌ COMMIT BLOCKED - Security tests failed!"
    echo ""
    echo "🚨 CRITICAL: Core security tests must pass before committing"
    echo ""
    echo "Fix the failing tests and try again:"
    echo "  1. Check test output above"
    echo "  2. Run: bash tests/run_dev_tests.sh"
    echo "  3. Fix any issues"
    echo "  4. Try committing again"
    echo ""
    exit 1
fi

echo ""
echo "✅ All core security tests passed!"
echo "🔒 Security validation complete - commit allowed"
echo ""

exit 0